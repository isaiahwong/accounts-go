apiVersion: v1
kind: Service
metadata:
  name: mongo-accounts-service
spec:
  ports:
  - name: tcp
    port: 27017
    targetPort: mongo-port
  selector: 
    component: mongo-accounts
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-accounts-deployment
spec:
  replicas: 1
  selector: 
    matchLabels:
      component: mongo-accounts
  template:
    metadata:
      labels:
        component: mongo-accounts
    spec:
      volumes:
        - name: mongo-accounts-storage
          persistentVolumeClaim:
            claimName: mongo-accounts-pvc
      containers:
        - name: mongo-accounts
          image: mongo
          ports:
            - name: mongo-port
              containerPort: 27017
          volumeMounts:
            - name: mongo-accounts-storage
              mountPath: /data/db
          envFrom:
          - secretRef:
              name: mongo-accounts-env-secrets
          env:
            - name: 'MONGO_INITDB_DATABASE'
              value: 'accounts'
---
# Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-accounts-pvc
spec: 
  accessModes: 
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: mongo-accounts-policy
spec:
  podSelector:
    matchLabels:
      component: mongo-accounts
  policyTypes:
  - Ingress
  ingress:
  - from:
      - podSelector:
          matchLabels:
            app: accounts
    ports:
    - protocol: TCP
      port: 27017
--- 
# Base64 encode the values stored in a Kubernetes Secret
# pbpaste | base64 | pbcopy
# pbpaste | base64 --decode
apiVersion: v1
kind: Secret
metadata:
  name: mongo-accounts-env-secrets
type: Opaque
data:
  MONGO_INITDB_ROOT_USERNAME: ZGV2dXNlcg==
  MONGO_INITDB_ROOT_PASSWORD: ZGV2dXNlcjEyMyk=
  